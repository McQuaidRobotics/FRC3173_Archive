// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3173.IgKnighters2016;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Solenoid;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static CANTalon acquisitionLifterMotor;
    public static CANTalon acquisitionBeltMotor;
    public static DigitalInput acquisitionBallSwitch;
    public static CANTalon drivesLeftFirstMotor;
    public static CANTalon drivesLeftSecondMotor;
    public static CANTalon drivesRightFirstMotor;
    public static CANTalon drivesRightSecondMotor;
    public static RobotDrive drivesController;
    public static CANTalon shooterSpinnerMotor;
    public static CANTalon climberWinchMotor;
    public static CANTalon climberTapeSpringFirstMotor;
    public static DigitalInput climberTapeSwitch;
    public static CANTalon climberTapeSpringSecondMotor;
    public static DigitalInput acquisitionLevelSwitch;
    //public static org.usfirst.frc3173.IgKnighters.utilities.IMU IMU;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static Solenoid visionLED;

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        acquisitionLifterMotor = new CANTalon(7);
        LiveWindow.addActuator("Acquisition", "Lifter Motor", acquisitionLifterMotor);
        
        acquisitionBeltMotor = new CANTalon(5);
        LiveWindow.addActuator("Acquisition", "Belt Motor", acquisitionBeltMotor);
        
        acquisitionBallSwitch = new DigitalInput(1);
        LiveWindow.addSensor("Acquisition", "Ball Switch", acquisitionBallSwitch);
        
        acquisitionLevelSwitch = new DigitalInput(7);
        
        drivesLeftFirstMotor = new CANTalon(1);
        LiveWindow.addActuator("Drives", "Left First Motor", drivesLeftFirstMotor);
        
        drivesLeftSecondMotor = new CANTalon(4);
        LiveWindow.addActuator("Drives", "Left Second Motor", drivesLeftSecondMotor);
        
        drivesRightFirstMotor = new CANTalon(2);
        LiveWindow.addActuator("Drives", "Right First Motor", drivesRightFirstMotor);
        
        drivesRightSecondMotor = new CANTalon(3);
        LiveWindow.addActuator("Drives", "Right Second Motor", drivesRightSecondMotor);
        
        drivesController = new RobotDrive(drivesLeftFirstMotor, drivesRightSecondMotor);
        
        drivesController.setSafetyEnabled(true);
        drivesController.setExpiration(0.1);
        drivesController.setSensitivity(0.5);
        drivesController.setMaxOutput(1.0);

        shooterSpinnerMotor = new CANTalon(6);
        LiveWindow.addActuator("Shooter", "Spinner Motor", shooterSpinnerMotor);
        
        climberWinchMotor = new CANTalon(8);
        LiveWindow.addActuator("Climber", "Winch Motor", climberWinchMotor);
        
        climberTapeSpringFirstMotor = new CANTalon(9);
        LiveWindow.addActuator("Climber", "Tape Spring First Motor", climberTapeSpringFirstMotor);
        
        climberTapeSwitch = new DigitalInput(0);
        LiveWindow.addSensor("Climber", "Tape Switch ", climberTapeSwitch);
        
        
        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        //IMU.IMUIni();
        visionLED = new Solenoid(20,2);
    }
}
