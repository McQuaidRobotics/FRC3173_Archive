// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3173.IgKnighters2016.subsystems;

import org.usfirst.frc3173.IgKnighters2016.Robot;
import org.usfirst.frc3173.IgKnighters2016.RobotMap;
import org.usfirst.frc3173.IgKnighters2016.commands.*;

import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Acquisition extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon lifterMotor = RobotMap.acquisitionLifterMotor;
    private final CANTalon beltMotor = RobotMap.acquisitionBeltMotor;
    private final DigitalInput ballSwitch = RobotMap.acquisitionBallSwitch;
    private final DigitalInput levelSwitch = RobotMap.acquisitionLevelSwitch;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public final double BELT_SPEED = 1;
    public final double LIFT_SPEED = .5;
    double P=100;
    double I=.1;
    double D=.1;
    public double TOP=1; //temp
    public double BOTTOM=0; //temp


    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    
    public Acquisition(){
    	super();
    	lifterMotor.enableBrakeMode(true);
    	//setToPosition();
    	setToPercentVBus();
    }

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    	setDefaultCommand(new AcquisitionBeltLift());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public void moveAcquisitionBelt(double speed){
    	if((speed>0&&Robot.oi.acquisitionEnableBallSwitch.get()&&isBallAtSwitch()&&!(Robot.shooter.isSpinning()))||!(lifterMotor.isFwdLimitSwitchClosed())){
    		beltMotor.set(0);
    	}else{
    		beltMotor.set(speed);
    	}
    }
    
    public void liftAcquisitionBelt(double speed){
    	lifterMotor.set(speed);	
    }
    
    public void liftToPosition(double position){
    	lifterMotor.set(position);
    }
    
    /*public void setToPosition(){
    	lifterMotor.changeControlMode(CANTalon.TalonControlMode.Position);
    	lifterMotor.setFeedbackDevice(CANTalon.FeedbackDevice.AnalogPot);
    	lifterMotor.setPID(P, I, D);
    	lifterMotor.enableControl();
    }*/
    
    public void setToPercentVBus(){
    	lifterMotor.set(lifterMotor.getPosition());
    	lifterMotor.changeControlMode(CANTalon.TalonControlMode.PercentVbus);
    	lifterMotor.enableControl();
    }
    
    public double getPosition(){
    	return lifterMotor.getPosition();
    }
    
    public boolean isBallAtSwitch(){
    	return ballSwitch.get();
    }
    
    public boolean isLevel(){
    	return levelSwitch.get();
    }
}

