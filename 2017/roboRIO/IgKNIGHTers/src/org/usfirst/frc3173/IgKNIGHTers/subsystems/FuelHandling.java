
/**
 * 
 *@author JohnMarangola
 *
 * Fuel handling class for low fuel boiler ports (not high fuel launcher)
 */
package org.usfirst.frc3173.IgKNIGHTers.subsystems;

import org.usfirst.frc3173.IgKNIGHTers.RobotMap;
import org.usfirst.frc3173.IgKNIGHTers.commands.*;
import com.ctre.CANTalon;
import edu.wpi.first.wpilibj.Solenoid;

import edu.wpi.first.wpilibj.command.Subsystem;



public class FuelHandling extends Subsystem {

	
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final Solenoid dumpGate = RobotMap.fuelHandlingDumpGate;
    private final CANTalon acquireFuel = RobotMap.fuelHandlingAcquireFuel;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    public void setFuelAcquisitionMotor(double d)
    {
    	acquireFuel.set(d);
    }
    public void setGate(boolean status)
    {
    	dumpGate.set(status);
    }
    public boolean GetGate()
    {
    	return dumpGate.get();
    }
    public boolean isSpinnerOn()
    {
    	if (Math.abs(acquireFuel.get()) > 0)
    	{
    		return true;
    	}
    	else 
    		return false;
    }
}

