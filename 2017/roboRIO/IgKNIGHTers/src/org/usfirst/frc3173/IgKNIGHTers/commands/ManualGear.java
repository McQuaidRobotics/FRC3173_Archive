// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3173.IgKNIGHTers.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc3173.IgKNIGHTers.Robot;

/**
 * @author JohnMarangola
 */
public class ManualGear extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATION
	private boolean isFirstIteration = true;
	private final double EXECUTION_TIME = 7.5;
	public boolean isDoneYet = false;
    private long StartMillis, CurrentDifferenceMillis, DesiredDifferenceMillis;
    public ManualGear() {

   
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	isDoneYet = false;
    	DesiredDifferenceMillis = (long) (EXECUTION_TIME * 1000);
    	StartMillis = System.currentTimeMillis();
    	CurrentDifferenceMillis = System.currentTimeMillis() - StartMillis;
    	isFirstIteration = false;
    	Robot.gears.PnuematicOperations(false);
    	
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	if (isFirstIteration == true)
    	{
    		isDoneYet = false;
    		DesiredDifferenceMillis = (long) (EXECUTION_TIME * 1000);
        	StartMillis = System.currentTimeMillis();
        	CurrentDifferenceMillis = Math.abs(System.currentTimeMillis() - StartMillis);
        	isFirstIteration = false;
        	Robot.gears.PnuematicOperations(false);
    	}
    	else if (isFirstIteration == false)
    	{
    		Robot.gears.PnuematicOperations(false);
    	}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	CurrentDifferenceMillis = System.currentTimeMillis() - StartMillis;
    	
		if (CurrentDifferenceMillis > DesiredDifferenceMillis)
    		return true;
    	else
    	{
    		//isFirstIteration = true;
    		return false;
    	}
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.gears.PnuematicOperations(true);
    	isFirstIteration = true;
    	isDoneYet = true;
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
    
    public boolean getFinishedYet()
    {
    	return isDoneYet;
    }
}
