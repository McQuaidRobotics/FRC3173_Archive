package org.usfirst.frc3173.IgKnighters2013.commands;
import edu.wpi.first.wpilibj.DriverStationLCD;
import edu.wpi.first.wpilibj.SensorBase;
import edu.wpi.first.wpilibj.can.CANTimeoutException;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc3173.IgKnighters2013.Robot;
import org.usfirst.frc3173.IgKnighters2013.RobotMap;
import edu.wpi.first.wpilibj.Gyro;
import org.usfirst.frc3173.IgKnighters2013.subsystems.Drives;
/**
 *author Cosmo Viola
 */
public class  DriveWithJoysticksAbsolute extends Command {
   // Gyro gyro1 = RobotMap.driveGyro;
    public DriveWithJoysticksAbsolute() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.drives);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    // Called just before this Command runs the first time
    protected void initialize() {
        RobotMap.driverstation.println(DriverStationLCD.Line.kUser1,1,this.toString() + " starting");
    }
    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        //Robot.drives.mecanumDriveAbsolute(Robot.oi.getX(), Robot.oi.getY(), Robot.oi.getRotation(), gyro1.getAngle());
    }
    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        if(!(Robot.oi.leftJoystick.getRawButton(1))){
            return true;
        } else{
            return false;
        }
    }
    // Called once after isFinished returns true
    protected void end() {
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
