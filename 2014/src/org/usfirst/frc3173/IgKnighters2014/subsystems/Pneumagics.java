// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc3173.IgKnighters2014.subsystems;
import org.usfirst.frc3173.IgKnighters2014.RobotMap;
import org.usfirst.frc3173.IgKnighters2014.commands.*;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import java.util.TimerTask;
/**
 *
 */
public class Pneumagics extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    AnalogChannel distance = RobotMap.pneumagicsdistance;
    Compressor alex = RobotMap.pneumagicsAlex;
    Relay cameraLight = RobotMap.pneumagicsCameraLight;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public Pneumagics() {
        alex.start();
        new java.util.Timer().scheduleAtFixedRate(new TimerTask() {
             public void run() {
                 SmartDashboard.putBoolean("Compressor Enabled",alex.enabled());
                 SmartDashboard.putBoolean("Compressor Pressure", alex.getPressureSwitchValue());
             }
        }, 0, 1000);
        cameraLight.set(Relay.Value.kOff);
    }
    
    public void setCameraLight(boolean on) {
        if (on) {
            cameraLight.set(Relay.Value.kForward);
        } else {
            cameraLight.set(Relay.Value.kOff);
        }
    }
    
    public boolean getCameraLight() {
        return cameraLight.get() != Relay.Value.kOff;
    }
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
}
