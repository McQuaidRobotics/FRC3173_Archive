// RobotBuilder Version: 1.0
//l
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc3173.IgKnighters2014.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc3173.IgKnighters2014.OI;
import org.usfirst.frc3173.IgKnighters2014.Robot;
/**
 *
 */
public class  DriveWithJoysticks extends Command {
    public DriveWithJoysticks() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.drives);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    // Called just before this Command runs the first time
    protected void initialize() {
    }
    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        // If the robot is going in the wrong direction,
        // change setSpeed(), not this method!
        double multiplier = (Robot.oi.leftDriveJoystick.getZ()*.5)+.5;
        double right=OI.squareInputs(OI.removeDrift(-Robot.oi.rightDriveJoystick.getY()))*multiplier;
        double left=OI.squareInputs(OI.removeDrift(-Robot.oi.leftDriveJoystick.getY()))*multiplier;
        Robot.drives.setSpeed(left, right);
    }
    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }
    // Called once after isFinished returns true
    protected void end() {
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
