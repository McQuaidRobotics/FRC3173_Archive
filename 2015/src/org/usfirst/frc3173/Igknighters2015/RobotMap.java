// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3173.Igknighters2015;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.can.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

import java.util.Vector;

import org.usfirst.frc3173.Igknighters2015.utilities.SendableCANTalon;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SendableCANTalon acquisitionAcquisitionLeft;
    public static SendableCANTalon acquisitionAcquisitionRight;
    public static DoubleSolenoid acquisitionAcquisition;
    public static SendableCANTalon elevationElevationMotor;
    public static AnalogPotentiometer elevationPotentiometer;
    public static DoubleSolenoid elevationElevationFrontPneumatic;
    public static DoubleSolenoid elevationElevationRearPneumatic;
    public static Solenoid binHolderBinHolderPneumatic;
    public static SendableCANTalon drivesFirstRight;
    public static SendableCANTalon drivesSecondRight;
    public static SendableCANTalon drivesFirstLeft;
    public static SendableCANTalon drivesSecondLeft;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        drivesFirstRight = new SendableCANTalon(1);
        drivesSecondRight = new SendableCANTalon(2);
        drivesFirstLeft = new SendableCANTalon(3);
        drivesSecondLeft = new SendableCANTalon(4);
    	
        LiveWindow.addActuator("Drives", "drivesFirstRight", drivesFirstRight);
        LiveWindow.addActuator("Drives", "drivesSecondRight", drivesSecondRight);
        LiveWindow.addActuator("Drives", "drivesFirstLeft", drivesFirstLeft);
        LiveWindow.addActuator("Drives", "drivesSecondLeft", drivesSecondLeft);
        
    	acquisitionAcquisitionLeft = new SendableCANTalon(5);
    	
    	LiveWindow.addActuator("Acquisition", "acquisitionLeft", acquisitionAcquisitionLeft);
        
        
        acquisitionAcquisitionRight = new SendableCANTalon(6);
        
        LiveWindow.addActuator("Acquisition", "acquisitionRight", acquisitionAcquisitionRight);
        
        
        acquisitionAcquisition = new DoubleSolenoid(20, 2, 3);      
        LiveWindow.addActuator("Acquisition", "Acquisition", acquisitionAcquisition);
        
        elevationElevationMotor = new SendableCANTalon(7);
        
        LiveWindow.addActuator("Elevation", "ElevationMotor", elevationElevationMotor);
        
        
        elevationPotentiometer = new AnalogPotentiometer(2, 1.0, 0.0);
        LiveWindow.addSensor("Elevation", "Potentiometer", elevationPotentiometer);
        
        elevationElevationFrontPneumatic = new DoubleSolenoid(20, 0,1);
        LiveWindow.addActuator("Elevation", "ElevationFrontPneumatic", elevationElevationFrontPneumatic);
        
        elevationElevationRearPneumatic = new DoubleSolenoid(20, 4,5);
        LiveWindow.addActuator("Elevation", "ElevationRearPneumatic", elevationElevationRearPneumatic);
        
        binHolderBinHolderPneumatic = new Solenoid(20,6);      
        LiveWindow.addActuator("BinHolder", "BinHolderPneumatic", binHolderBinHolderPneumatic);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
